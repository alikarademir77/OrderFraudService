<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<bindings xmlns="http://java.sun.com/xml/ns/jaxb" if-exists="true" version="2.1">
  <!--

This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
Any modifications to this file will be lost upon recompilation of the source schema. 
Generated on: 2018.04.02 at 11:45:58 AM PDT 

  -->
  <bindings xmlns:tns="http://bestbuy.com/TenderAuth" if-exists="true" scd="x-schema::tns">
    <schemaBindings map="false">
      <package name="ca.bestbuy.orders.fraud.model.client.accertify.wsdl"/>
    </schemaBindings>
    <bindings if-exists="true" scd="tns:AuthorizeApplicationForPELResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeApplicationForPELResponse"/>
    </bindings>
    <bindings if-exists="true" scd="tns:AuthorizeApplication">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeApplication"/>
    </bindings>
    <bindings if-exists="true" scd="tns:AuthorizeApplicationResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeApplicationResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CardInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CardInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitCardInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitCardInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAuthorizationResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAuthorizationResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:FraudNegativeRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.FraudNegativeRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitAuthorizationResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitAuthorizationResult"/>
    </bindings>
    <bindings if-exists="true" scd="tns:AuthorizeApplicationForPEL">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeApplicationForPEL"/>
    </bindings>
    <bindings if-exists="true" scd="tns:AuthorizeGiftCardForPEL">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeGiftCardForPEL"/>
    </bindings>
    <bindings if-exists="true" scd="tns:AuthorizeGiftCardForPELResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeGiftCardForPELResponse"/>
    </bindings>
    <bindings if-exists="true" scd="tns:HeartBeat106MessageCall">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.HeartBeat106MessageCall"/>
    </bindings>
    <bindings if-exists="true" scd="tns:HeartBeat106MessageCallResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.HeartBeat106MessageCallResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitAuthorizationRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitAuthorizationRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitReversalRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitReversalRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitReversalResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitReversalResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitAuthWithFullfraudReversalRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitAuthWithFullfraudReversalRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitAuthWithFullFraudReversalResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitAuthWithFullFraudReversalResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ManageOrderRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ManageOrderRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ManageOrderResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ManageOrderResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:FraudNegativeResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.FraudNegativeResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:FraudNegativeRequest1">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.FraudNegativeRequest1"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAccountInquiryRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAccountInquiryRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAccountInquiryResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAccountInquiryResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PreScreenApplicationRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PreScreenApplicationRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PreScreenApplicationResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PreScreenApplicationResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PreScreenUpdateRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PreScreenUpdateRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PreScreenUpdateResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PreScreenUpdateResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAuthorizationWithFraudRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAuthorizationWithFraudRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAuthorizationWithFraudResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAuthorizationWithFraudResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAuthorizationWithFullFraudRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAuthorizationWithFullFraudRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAuthorizationWithFullFraudResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAuthorizationWithFullFraudResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitAuthorizationWithFullFraudRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitAuthorizationWithFullFraudRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitAuthorizationWithFullFraudResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitAuthorizationWithFullFraudResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PrivateLabelRefundRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PrivateLabelRefundRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PrivateLabelRefundResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PrivateLabelRefundResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:AuthorizeFlashApplicationRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeFlashApplicationRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:AuthorizeFlashApplicationResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthorizeFlashApplicationResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardBalanceInquiryRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardBalanceInquiryRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardBalanceInquiryResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardBalanceInquiryResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardAuthorizationRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardAuthorizationRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardAuthorizationResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardAuthorizationResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardReversalRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardReversalRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardReversalResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardReversalResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardActivateRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardActivateRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardActivateResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardActivateResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardReloadRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardReloadRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardReloadResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardReloadResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardActivateReversalRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardActivateReversalRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:GiftCardActivateReversalResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCardActivateReversalResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAuthorizationRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAuthorizationRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAccountLookupRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAccountLookupRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardAccountLookupResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardAccountLookupResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardReversalRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardReversalRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardReversalResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardReversalResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardwithFullFraudReversalRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardwithFullFraudReversalRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CreditCardwithFullFraudReversalResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCardwithFullFraudReversalResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PaymentOnAccountRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PaymentOnAccountRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PaymentOnAccountResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PaymentOnAccountResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:POSARequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.POSARequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:POSAResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.POSAResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:VBVCheckRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.VBVCheckRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:VBVCheckResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.VBVCheckResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:VBVProcessRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.VBVProcessRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:VBVProcessResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.VBVProcessResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CheckAuthorizationRequest">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CheckAuthorizationRequest"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CheckAuthorizationResult">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CheckAuthorizationResult"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:RequestId">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.RequestId"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:RequestSource">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.RequestSource"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TransactionData">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.TransactionData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:billingDetails">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.BillingDetails"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:paymentMethods">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PaymentMethods"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:caPaymentMethod">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CaPaymentMethod"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:paypal">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Paypal"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:creditCard">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CreditCard"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:giftCard">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.GiftCard"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:coupon">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Coupon"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:member">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Member"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:shippingOrders">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ShippingOrders"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:shippingOrder">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ShippingOrder"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:shippingDetails">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ShippingDetails"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:addressDetails">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AddressDetails"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:items">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Items"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:item">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Item"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:chargeBacks">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ChargeBacks"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:chargeBack">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ChargeBack"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ArrayOfString">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ArrayOfString"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Transaction-results">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.TransactionResults"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ResponseData">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ResponseData"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Transaction">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Transaction"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ArrayOfString1">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ArrayOfString1"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Order">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Order"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Extn">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Extn"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:EOMSBBYMHeaderList">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.EOMSBBYMHeaderList"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:EOMSBBYMHeaderListEOMSBBYMHeader">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.EOMSBBYMHeaderListEOMSBBYMHeader"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PriceInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PriceInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PersonInfoBillTo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PersonInfoBillTo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PersonInfoContact">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PersonInfoContact"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ArrayOfPaymentMethod">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ArrayOfPaymentMethod"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PaymentMethod">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PaymentMethod"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ArrayOfOrderLine">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ArrayOfOrderLine"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:OrderLine">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.OrderLine"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DigitalItem">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DigitalItem"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DigitalExtn">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DigitalExtn"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CustomerInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CustomerInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:SellerInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.SellerInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:VisaNetResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.VisaNetResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DCSAuthInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DCSAuthInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ApplePayInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ApplePayInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ApplePayNetResponse">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ApplePayNetResponse"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ArrayOfLookupActionCode">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ArrayOfLookupActionCode"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LookupActionCode">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.LookupActionCode"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ArrayOfAccountInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ArrayOfAccountInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:AccountInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AccountInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CheckInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CheckInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:SkuInfo">
      <class ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.SkuInfo"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:DebitCardEntryType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.DebitCardEntryType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PointOfService">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PointOfService"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CountryCode">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CountryCode"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:TransactionLanguage">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.TransactionLanguage"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ActionCode">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ActionCode"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:ManageOrderActionCode">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ManageOrderActionCode"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:transactionType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.TransactionType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:salesChannels">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.SalesChannels"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:paymentMethodType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PaymentMethodType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:paymentMethodStatus">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PaymentMethodStatus"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:shippingOrderStatus">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ShippingOrderStatus"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:purchaseOrderStatus">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PurchaseOrderStatus"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:itemStatus">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.ItemStatus"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CCAccountInquiryCardType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CCAccountInquiryCardType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PreScreenActionCode">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PreScreenActionCode"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PreScreenUpdateStatus">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PreScreenUpdateStatus"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PreScreenUpdateActionCode">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PreScreenUpdateActionCode"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CardType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CardType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CardEntryType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CardEntryType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PLAuthType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PLAuthType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:RefundType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.RefundType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:AuthType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.AuthType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:LookupType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.LookupType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:Vendor">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.Vendor"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:PosaType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.PosaType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CheckType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CheckType"/>
    </bindings>
    <bindings if-exists="true" scd="~tns:CheckEntryType">
      <typesafeEnumClass ref="ca.bestbuy.orders.fraud.model.client.accertify.wsdl.CheckEntryType"/>
    </bindings>
  </bindings>
</bindings>
