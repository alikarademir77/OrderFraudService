/*
 * Order Details Service REST API
 * REST API for retrieving details of an order.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: eCommCAOrders@bestbuy.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ca.bestbuy.orders.fraud.model.client.orderdetails;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import org.joda.time.DateTime;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * ShippingOrder
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-19T01:15:20.679-08:00")
public class ShippingOrder {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("actualCarrier")
  private ActualCarrier actualCarrier = null;

  @JsonProperty("globalContractRefId")
  private String globalContractRefId = null;

  @JsonProperty("fulfillmentMethod")
  private String fulfillmentMethod = null;

  @JsonProperty("fulfillmentPartner")
  private String fulfillmentPartner = null;

  @JsonProperty("isCustomerInvoiceAvailable")
  private Boolean isCustomerInvoiceAvailable = null;

  @JsonProperty("paymentInfo")
  private PaymentInfo paymentInfo = null;

  @JsonProperty("requestedCarrier")
  private RequestedCarrier requestedCarrier = null;

  @JsonProperty("requestedDeliveryDate")
  private DateTime requestedDeliveryDate = null;

  @JsonProperty("shipFromAddress")
  private ShipFromAddress shipFromAddress = null;

  @JsonProperty("shipToAddress")
  private Address shipToAddress = null;

  @JsonProperty("shipmentDate")
  private DateTime shipmentDate = null;

  @JsonProperty("shippingCharges")
  private List<ShippingCharge> shippingCharges = null;

  @JsonProperty("shippingOrderLines")
  private List<ShippingOrderLine> shippingOrderLines = null;

  @JsonProperty("status")
  private Status status = null;

  @JsonProperty("storeToFulfillFrom")
  private String storeToFulfillFrom = null;

  @JsonProperty("type")
  private String type = null;

  public ShippingOrder id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ShippingOrder actualCarrier(ActualCarrier actualCarrier) {
    this.actualCarrier = actualCarrier;
    return this;
  }

   /**
   * Get actualCarrier
   * @return actualCarrier
  **/
  @ApiModelProperty(value = "")
  public ActualCarrier getActualCarrier() {
    return actualCarrier;
  }

  public void setActualCarrier(ActualCarrier actualCarrier) {
    this.actualCarrier = actualCarrier;
  }

  public ShippingOrder globalContractRefId(String globalContractRefId) {
    this.globalContractRefId = globalContractRefId;
    return this;
  }

   /**
   * Get globalContractRefId
   * @return globalContractRefId
  **/
  @ApiModelProperty(value = "")
  public String getGlobalContractRefId() {
    return globalContractRefId;
  }

  public void setGlobalContractRefId(String globalContractRefId) {
    this.globalContractRefId = globalContractRefId;
  }

  public ShippingOrder fulfillmentMethod(String fulfillmentMethod) {
    this.fulfillmentMethod = fulfillmentMethod;
    return this;
  }

   /**
   * Get fulfillmentMethod
   * @return fulfillmentMethod
  **/
  @ApiModelProperty(value = "")
  public String getFulfillmentMethod() {
    return fulfillmentMethod;
  }

  public void setFulfillmentMethod(String fulfillmentMethod) {
    this.fulfillmentMethod = fulfillmentMethod;
  }

  public ShippingOrder fulfillmentPartner(String fulfillmentPartner) {
    this.fulfillmentPartner = fulfillmentPartner;
    return this;
  }

   /**
   * Get fulfillmentPartner
   * @return fulfillmentPartner
  **/
  @ApiModelProperty(value = "")
  public String getFulfillmentPartner() {
    return fulfillmentPartner;
  }

  public void setFulfillmentPartner(String fulfillmentPartner) {
    this.fulfillmentPartner = fulfillmentPartner;
  }

  public ShippingOrder isCustomerInvoiceAvailable(Boolean isCustomerInvoiceAvailable) {
    this.isCustomerInvoiceAvailable = isCustomerInvoiceAvailable;
    return this;
  }

   /**
   * Get isCustomerInvoiceAvailable
   * @return isCustomerInvoiceAvailable
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsCustomerInvoiceAvailable() {
    return isCustomerInvoiceAvailable;
  }

  public void setIsCustomerInvoiceAvailable(Boolean isCustomerInvoiceAvailable) {
    this.isCustomerInvoiceAvailable = isCustomerInvoiceAvailable;
  }

  public ShippingOrder paymentInfo(PaymentInfo paymentInfo) {
    this.paymentInfo = paymentInfo;
    return this;
  }

   /**
   * Get paymentInfo
   * @return paymentInfo
  **/
  @ApiModelProperty(value = "")
  public PaymentInfo getPaymentInfo() {
    return paymentInfo;
  }

  public void setPaymentInfo(PaymentInfo paymentInfo) {
    this.paymentInfo = paymentInfo;
  }

  public ShippingOrder requestedCarrier(RequestedCarrier requestedCarrier) {
    this.requestedCarrier = requestedCarrier;
    return this;
  }

   /**
   * Get requestedCarrier
   * @return requestedCarrier
  **/
  @ApiModelProperty(value = "")
  public RequestedCarrier getRequestedCarrier() {
    return requestedCarrier;
  }

  public void setRequestedCarrier(RequestedCarrier requestedCarrier) {
    this.requestedCarrier = requestedCarrier;
  }

  public ShippingOrder requestedDeliveryDate(DateTime requestedDeliveryDate) {
    this.requestedDeliveryDate = requestedDeliveryDate;
    return this;
  }

   /**
   * Get requestedDeliveryDate
   * @return requestedDeliveryDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getRequestedDeliveryDate() {
    return requestedDeliveryDate;
  }

  public void setRequestedDeliveryDate(DateTime requestedDeliveryDate) {
    this.requestedDeliveryDate = requestedDeliveryDate;
  }

  public ShippingOrder shipFromAddress(ShipFromAddress shipFromAddress) {
    this.shipFromAddress = shipFromAddress;
    return this;
  }

   /**
   * Get shipFromAddress
   * @return shipFromAddress
  **/
  @ApiModelProperty(value = "")
  public ShipFromAddress getShipFromAddress() {
    return shipFromAddress;
  }

  public void setShipFromAddress(ShipFromAddress shipFromAddress) {
    this.shipFromAddress = shipFromAddress;
  }

  public ShippingOrder shipToAddress(Address shipToAddress) {
    this.shipToAddress = shipToAddress;
    return this;
  }

   /**
   * Get shipToAddress
   * @return shipToAddress
  **/
  @ApiModelProperty(value = "")
  public Address getShipToAddress() {
    return shipToAddress;
  }

  public void setShipToAddress(Address shipToAddress) {
    this.shipToAddress = shipToAddress;
  }

  public ShippingOrder shipmentDate(DateTime shipmentDate) {
    this.shipmentDate = shipmentDate;
    return this;
  }

   /**
   * Get shipmentDate
   * @return shipmentDate
  **/
  @ApiModelProperty(value = "")
  public DateTime getShipmentDate() {
    return shipmentDate;
  }

  public void setShipmentDate(DateTime shipmentDate) {
    this.shipmentDate = shipmentDate;
  }

  public ShippingOrder shippingCharges(List<ShippingCharge> shippingCharges) {
    this.shippingCharges = shippingCharges;
    return this;
  }

  public ShippingOrder addShippingChargesItem(ShippingCharge shippingChargesItem) {
    if (this.shippingCharges == null) {
      this.shippingCharges = new ArrayList<ShippingCharge>();
    }
    this.shippingCharges.add(shippingChargesItem);
    return this;
  }

   /**
   * Get shippingCharges
   * @return shippingCharges
  **/
  @ApiModelProperty(value = "")
  public List<ShippingCharge> getShippingCharges() {
    return shippingCharges;
  }

  public void setShippingCharges(List<ShippingCharge> shippingCharges) {
    this.shippingCharges = shippingCharges;
  }

  public ShippingOrder shippingOrderLines(List<ShippingOrderLine> shippingOrderLines) {
    this.shippingOrderLines = shippingOrderLines;
    return this;
  }

  public ShippingOrder addShippingOrderLinesItem(ShippingOrderLine shippingOrderLinesItem) {
    if (this.shippingOrderLines == null) {
      this.shippingOrderLines = new ArrayList<ShippingOrderLine>();
    }
    this.shippingOrderLines.add(shippingOrderLinesItem);
    return this;
  }

   /**
   * Get shippingOrderLines
   * @return shippingOrderLines
  **/
  @ApiModelProperty(value = "")
  public List<ShippingOrderLine> getShippingOrderLines() {
    return shippingOrderLines;
  }

  public void setShippingOrderLines(List<ShippingOrderLine> shippingOrderLines) {
    this.shippingOrderLines = shippingOrderLines;
  }

  public ShippingOrder status(Status status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }

  public ShippingOrder storeToFulfillFrom(String storeToFulfillFrom) {
    this.storeToFulfillFrom = storeToFulfillFrom;
    return this;
  }

   /**
   * Get storeToFulfillFrom
   * @return storeToFulfillFrom
  **/
  @ApiModelProperty(value = "")
  public String getStoreToFulfillFrom() {
    return storeToFulfillFrom;
  }

  public void setStoreToFulfillFrom(String storeToFulfillFrom) {
    this.storeToFulfillFrom = storeToFulfillFrom;
  }

  public ShippingOrder type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingOrder shippingOrder = (ShippingOrder) o;
    return Objects.equals(this.id, shippingOrder.id) &&
        Objects.equals(this.actualCarrier, shippingOrder.actualCarrier) &&
        Objects.equals(this.globalContractRefId, shippingOrder.globalContractRefId) &&
        Objects.equals(this.fulfillmentMethod, shippingOrder.fulfillmentMethod) &&
        Objects.equals(this.fulfillmentPartner, shippingOrder.fulfillmentPartner) &&
        Objects.equals(this.isCustomerInvoiceAvailable, shippingOrder.isCustomerInvoiceAvailable) &&
        Objects.equals(this.paymentInfo, shippingOrder.paymentInfo) &&
        Objects.equals(this.requestedCarrier, shippingOrder.requestedCarrier) &&
        Objects.equals(this.requestedDeliveryDate, shippingOrder.requestedDeliveryDate) &&
        Objects.equals(this.shipFromAddress, shippingOrder.shipFromAddress) &&
        Objects.equals(this.shipToAddress, shippingOrder.shipToAddress) &&
        Objects.equals(this.shipmentDate, shippingOrder.shipmentDate) &&
        Objects.equals(this.shippingCharges, shippingOrder.shippingCharges) &&
        Objects.equals(this.shippingOrderLines, shippingOrder.shippingOrderLines) &&
        Objects.equals(this.status, shippingOrder.status) &&
        Objects.equals(this.storeToFulfillFrom, shippingOrder.storeToFulfillFrom) &&
        Objects.equals(this.type, shippingOrder.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, actualCarrier, globalContractRefId, fulfillmentMethod, fulfillmentPartner, isCustomerInvoiceAvailable, paymentInfo, requestedCarrier, requestedDeliveryDate, shipFromAddress, shipToAddress, shipmentDate, shippingCharges, shippingOrderLines, status, storeToFulfillFrom, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingOrder {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    actualCarrier: ").append(toIndentedString(actualCarrier)).append("\n");
    sb.append("    globalContractRefId: ").append(toIndentedString(globalContractRefId)).append("\n");
    sb.append("    fulfillmentMethod: ").append(toIndentedString(fulfillmentMethod)).append("\n");
    sb.append("    fulfillmentPartner: ").append(toIndentedString(fulfillmentPartner)).append("\n");
    sb.append("    isCustomerInvoiceAvailable: ").append(toIndentedString(isCustomerInvoiceAvailable)).append("\n");
    sb.append("    paymentInfo: ").append(toIndentedString(paymentInfo)).append("\n");
    sb.append("    requestedCarrier: ").append(toIndentedString(requestedCarrier)).append("\n");
    sb.append("    requestedDeliveryDate: ").append(toIndentedString(requestedDeliveryDate)).append("\n");
    sb.append("    shipFromAddress: ").append(toIndentedString(shipFromAddress)).append("\n");
    sb.append("    shipToAddress: ").append(toIndentedString(shipToAddress)).append("\n");
    sb.append("    shipmentDate: ").append(toIndentedString(shipmentDate)).append("\n");
    sb.append("    shippingCharges: ").append(toIndentedString(shippingCharges)).append("\n");
    sb.append("    shippingOrderLines: ").append(toIndentedString(shippingOrderLines)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storeToFulfillFrom: ").append(toIndentedString(storeToFulfillFrom)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

