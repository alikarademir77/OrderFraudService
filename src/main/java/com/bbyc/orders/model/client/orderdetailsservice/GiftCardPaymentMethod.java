/*
 * Order Details Service REST API
 * REST API for rertrieving details of various order types.
 *
 * OpenAPI spec version: 1
 * Contact: eCommCAOrders@bestbuy.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.bbyc.orders.model.client.orderdetailsservice;

import java.util.Objects;
import com.bbyc.orders.model.client.orderdetailsservice.ActiveStatus;
import com.bbyc.orders.model.client.orderdetailsservice.GiftCard;
import com.bbyc.orders.model.client.orderdetailsservice.Priority;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * GiftCardPaymentMethod
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-08T17:40:22.226-08:00")
public class GiftCardPaymentMethod {
  @JsonProperty("activeStatus")
  private ActiveStatus activeStatus = null;

  @JsonProperty("giftCard")
  private GiftCard giftCard = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("invoicedAmount")
  private Float invoicedAmount = null;

  @JsonProperty("priority")
  private Priority priority = null;

  public GiftCardPaymentMethod activeStatus(ActiveStatus activeStatus) {
    this.activeStatus = activeStatus;
    return this;
  }

   /**
   * Get activeStatus
   * @return activeStatus
  **/
  @ApiModelProperty(value = "")
  public ActiveStatus getActiveStatus() {
    return activeStatus;
  }

  public void setActiveStatus(ActiveStatus activeStatus) {
    this.activeStatus = activeStatus;
  }

  public GiftCardPaymentMethod giftCard(GiftCard giftCard) {
    this.giftCard = giftCard;
    return this;
  }

   /**
   * Get giftCard
   * @return giftCard
  **/
  @ApiModelProperty(value = "")
  public GiftCard getGiftCard() {
    return giftCard;
  }

  public void setGiftCard(GiftCard giftCard) {
    this.giftCard = giftCard;
  }

  public GiftCardPaymentMethod id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GiftCardPaymentMethod invoicedAmount(Float invoicedAmount) {
    this.invoicedAmount = invoicedAmount;
    return this;
  }

   /**
   * Get invoicedAmount
   * @return invoicedAmount
  **/
  @ApiModelProperty(value = "")
  public Float getInvoicedAmount() {
    return invoicedAmount;
  }

  public void setInvoicedAmount(Float invoicedAmount) {
    this.invoicedAmount = invoicedAmount;
  }

  public GiftCardPaymentMethod priority(Priority priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public Priority getPriority() {
    return priority;
  }

  public void setPriority(Priority priority) {
    this.priority = priority;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GiftCardPaymentMethod giftCardPaymentMethod = (GiftCardPaymentMethod) o;
    return Objects.equals(this.activeStatus, giftCardPaymentMethod.activeStatus) &&
        Objects.equals(this.giftCard, giftCardPaymentMethod.giftCard) &&
        Objects.equals(this.id, giftCardPaymentMethod.id) &&
        Objects.equals(this.invoicedAmount, giftCardPaymentMethod.invoicedAmount) &&
        Objects.equals(this.priority, giftCardPaymentMethod.priority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeStatus, giftCard, id, invoicedAmount, priority);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GiftCardPaymentMethod {\n");
    
    sb.append("    activeStatus: ").append(toIndentedString(activeStatus)).append("\n");
    sb.append("    giftCard: ").append(toIndentedString(giftCard)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoicedAmount: ").append(toIndentedString(invoicedAmount)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

