-- Generated by Ali Karademir
--   at:        2018-03-06 17:35:17 PST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

CREATE TABLE ID_GENERATOR (
	GENERATED_NAME VARCHAR(80) NOT NULL,
	GENERATED_VALUE NUMBER NOT NULL
);
ALTER TABLE ID_GENERATOR ADD CONSTRAINT ID_GENERATOR_PK PRIMARY KEY ( GENERATED_NAME );

INSERT INTO ID_GENERATOR (GENERATED_NAME, GENERATED_VALUE) VALUES ('FRAUD_RQST_ID', 0);
INSERT INTO ID_GENERATOR (GENERATED_NAME, GENERATED_VALUE) VALUES ('FRAUD_RQST_STATUS_HSTRY_ID', 0);

CREATE TABLE FRAUD_RQST (
    FRAUD_RQST_ID    NUMBER NOT NULL,
--  fs order number
    ORDER_NUMBER       NUMBER NOT NULL,
    EVENT_DATE         DATE NOT NULL,
--  every time oms moves the fso to fraud check required,we will create a new version
    REQUEST_VERSION    INTEGER NOT NULL,
    REQUEST_TYPE_CODE   VARCHAR2(80 CHAR) NOT NULL,
    FRAUD_STATUS_CODE   VARCHAR2(80 CHAR) NOT NULL,
	VERSION    		  INTEGER NOT NULL,
    CREATE_DATE        DATE NOT NULL,
    CREATE_USER        VARCHAR2(80 CHAR) NOT NULL,
    UPDATE_DATE        DATE NOT NULL,
    UPDATE_USER        VARCHAR2(80 CHAR) NOT NULL
);
ALTER TABLE FRAUD_RQST ADD CONSTRAINT FRAUD_RQST_PK PRIMARY KEY ( FRAUD_RQST_ID ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;
ALTER TABLE FRAUD_RQST ADD CONSTRAINT FRAUD_RQST_UN UNIQUE ( ORDER_NUMBER, REQUEST_VERSION ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;

CREATE TABLE FRAUD_RQST_STATUS_HSTRY (
    FRAUD_RQST_STATUS_HSTRY_ID   NUMBER NOT NULL,
    FRAUD_RQST_ID          NUMBER NOT NULL,
    FRAUD_STATUS_CODE         VARCHAR2(80 CHAR) NOT NULL,
	VERSION    		  		INTEGER NOT NULL,
    CREATE_DATE             	DATE NOT NULL,
    CREATE_USER              VARCHAR2(80 CHAR) NOT NULL,
    UPDATE_DATE              DATE NOT NULL,
    UPDATE_USER              VARCHAR2(80) NOT NULL
);
ALTER TABLE FRAUD_RQST_STATUS_HSTRY ADD CONSTRAINT FRAUD_RQST_STATUS_HSTRY_PK PRIMARY KEY ( FRAUD_RQST_STATUS_HSTRY_ID ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;


CREATE TABLE FRAUD_RQST_STATUS_HSTRY_DTLS (
    FRAUD_RQST_STATUS_HSTRY_ID   NUMBER NOT NULL,
    TAS_REQUEST              CLOB NOT NULL,
    TAS_RESPONSE             CLOB NOT NULL,
    VERSION    		  		INTEGER NOT NULL,
	CREATE_DATE              DATE NOT NULL,
    CREATE_USER              VARCHAR2(80) NOT NULL,
    UPDATE_DATE              DATE NOT NULL,
    UPDATE_USER              VARCHAR2(80) NOT NULL
);
ALTER TABLE FRAUD_RQST_STATUS_HSTRY_DTLS ADD CONSTRAINT FRD_RQST_STATUS_HSTRY_DTLS_PK PRIMARY KEY ( FRAUD_RQST_STATUS_HSTRY_ID ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;


CREATE TABLE FRAUD_STATUSES (
    FRAUD_STATUS_CODE          VARCHAR2(80) NOT NULL,
    FRAUD_STATUS_DESCRIPTION   VARCHAR2(2000 CHAR),
    VERSION    		  		 INTEGER NOT NULL,
	CREATE_DATE               DATE NOT NULL,
    CREATE_USER               VARCHAR2(80) NOT NULL,
    UPDATE_DATE               DATE NOT NULL,
    UPDATE_USER               VARCHAR2(80) NOT NULL
);
ALTER TABLE FRAUD_STATUSES ADD CONSTRAINT FRAUD_STATUSES_PK PRIMARY KEY ( FRAUD_STATUS_CODE ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('INITIAL_REQUEST', 'Initial request received.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('DECISION_MADE', 'Final fraud decision is made.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('PENDING_REVIEW', 'Fraud decision is pending manual review.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('CANCELLED', 'Fraud assessment is canceled.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');


CREATE TABLE FRAUD_RQST_TYPES (
    REQUEST_TYPE_CODE          VARCHAR2(80 CHAR) NOT NULL,
    REQUEST_TYPE_DESCRIPTION   VARCHAR2(2000),
    VERSION    		  		 INTEGER NOT NULL,
	CREATE_DATE               DATE NOT NULL,
    CREATE_USER               VARCHAR2(80) NOT NULL,
    UPDATE_DATE               DATE NOT NULL,
    UPDATE_USER               VARCHAR2(80 CHAR) NOT NULL
);

INSERT INTO FRAUD_RQST_TYPES (REQUEST_TYPE_CODE, REQUEST_TYPE_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('FRAUD_CHECK', 'Fraud check request', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_RQST_TYPES (REQUEST_TYPE_CODE, REQUEST_TYPE_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('ORDER_CANCEL', 'Order cancellation', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');


ALTER TABLE FRAUD_RQST_TYPES ADD CONSTRAINT FRAUD_RQST_TYPES_PK PRIMARY KEY ( REQUEST_TYPE_CODE ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;

ALTER TABLE FRAUD_RQST
    ADD CONSTRAINT FRDRQST_FRDSTATUSES_FK FOREIGN KEY ( FRAUD_STATUS_CODE )
        REFERENCES FRAUD_STATUSES ( FRAUD_STATUS_CODE );

ALTER TABLE FRAUD_RQST
    ADD CONSTRAINT FRDRQST_RQST_TYPS_FK FOREIGN KEY ( REQUEST_TYPE_CODE )
        REFERENCES FRAUD_RQST_TYPES ( REQUEST_TYPE_CODE );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY 
    ADD CONSTRAINT FRDRQSTHSTRY_FRDRQST_FK FOREIGN KEY ( FRAUD_RQST_ID ) 
        REFERENCES FRAUD_RQST ( FRAUD_RQST_ID );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY
    ADD CONSTRAINT FRDRQSTHSTRY_FRDSTATUSES_FK FOREIGN KEY ( FRAUD_STATUS_CODE )
        REFERENCES FRAUD_STATUSES ( FRAUD_STATUS_CODE );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY_DTLS
    ADD CONSTRAINT FRDRQSTHSTRYDTL_FRDRQSTHTRY_FK FOREIGN KEY ( FRAUD_RQST_STATUS_HSTRY_ID )
        REFERENCES FRAUD_RQST_STATUS_HSTRY ( FRAUD_RQST_STATUS_HSTRY_ID );

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_READ_ROLE;
GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_WRITE_ROLE;
GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_READ_ROLE;
GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_READ_ROLE;
GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_READ_ROLE;
-- GRANT INSERT ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_READ_ROLE;
-- GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."ID_GENERATOR" TO ORDERFRAUD_READ_ROLE;
GRANT UPDATE ON "ORDER_FRAUD"."ID_GENERATOR" TO ORDERFRAUD_WRITE_ROLE;
