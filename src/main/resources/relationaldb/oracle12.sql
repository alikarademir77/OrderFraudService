-- Generated by Ali Karademir
--   at:        2018-03-06 17:35:17 PST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

CREATE TABLE ID_GENERATOR (
	GENERATED_NAME VARCHAR(80) NOT NULL,
	GENERATED_VALUE NUMBER NOT NULL
);
ALTER TABLE ID_GENERATOR ADD CONSTRAINT ID_GENERATOR_PK PRIMARY KEY ( GENERATED_NAME );

INSERT INTO ID_GENERATOR (GENERATED_NAME, GENERATED_VALUE) VALUES ('FRAUDREQUESTID', 0);
INSERT INTO ID_GENERATOR (GENERATED_NAME, GENERATED_VALUE) VALUES ('FRAUDREQUESTSTATUSHISTORYID', 0);

CREATE TABLE FRAUD_RQST (
    FRAUDREQUESTID    NUMBER NOT NULL,
--  fs order number
    ORDERNUMBER       NUMBER NOT NULL,
    EVENTDATE         DATE NOT NULL,
--  every time oms moves the fso to fraud check required,we will create a new version
    REQUESTVERSION    INTEGER NOT NULL,
    REQUESTTYPECODE   VARCHAR2(80 CHAR) NOT NULL,
    FRAUDSTATUSCODE   VARCHAR2(80 CHAR) NOT NULL,
	VERSION    		  INTEGER NOT NULL,
    CREATEDATE        DATE NOT NULL,
    CREATEUSER        VARCHAR2(80 CHAR) NOT NULL,
    UPDATEDATE        DATE NOT NULL,
    UPDATEUSER        VARCHAR2(80 CHAR) NOT NULL
);
ALTER TABLE FRAUD_RQST ADD CONSTRAINT FRAUD_RQST_PK PRIMARY KEY ( FRAUDREQUESTID ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;
ALTER TABLE FRAUD_RQST ADD CONSTRAINT FRAUD_RQST_UN UNIQUE ( ORDERNUMBER, REQUESTVERSION ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;

CREATE TABLE FRAUD_RQST_STATUS_HSTRY (
    FRAUDREQUESTSTATUSHISTORYID   NUMBER NOT NULL,
    FRAUDREQUESTID          NUMBER NOT NULL,
    FRAUDSTATUSCODE         VARCHAR2(80 CHAR) NOT NULL,
	VERSION    		  		INTEGER NOT NULL,
    CREATEDATE             	DATE NOT NULL,
    CREATEUSER              VARCHAR2(80 CHAR) NOT NULL,
    UPDATEDATE              DATE NOT NULL,
    UPDATEUSER              VARCHAR2(80) NOT NULL
);
ALTER TABLE FRAUD_RQST_STATUS_HSTRY ADD CONSTRAINT FRAUD_RQST_STATUS_HSTRY_PK PRIMARY KEY ( FRAUDREQUESTSTATUSHISTORYID ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;


CREATE TABLE FRAUD_RQST_STATUS_HSTRY_DTLS (
    FRAUDREQUESTSTATUSHISTORYID   NUMBER NOT NULL,
    TASREQUEST              CLOB NOT NULL,
    TASRESPONSE             CLOB NOT NULL,
    VERSION    		  		INTEGER NOT NULL,
	CREATEDATE              DATE NOT NULL,
    CREATEUSER              VARCHAR2(80) NOT NULL,
    UPDATEDATE              DATE NOT NULL,
    UPDATEUSER              VARCHAR2(80) NOT NULL
);
ALTER TABLE FRAUD_RQST_STATUS_HSTRY_DTLS ADD CONSTRAINT FRD_RQST_STATUS_HSTRY_DTLS_PK PRIMARY KEY ( FRAUDREQUESTSTATUSHISTORYID ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;



CREATE TABLE FRAUD_STATUSES (
    FRAUDSTATUSCODE          VARCHAR2(80) NOT NULL,
    FRAUDSTATUSDESCRIPTION   VARCHAR2(2000 CHAR),
    VERSION    		  		 INTEGER NOT NULL,
	CREATEDATE               DATE NOT NULL,
    CREATEUSER               VARCHAR2(80) NOT NULL,
    UPDATEDATE               DATE NOT NULL,
    UPDATEUSER               VARCHAR2(80) NOT NULL
);
ALTER TABLE FRAUD_STATUSES ADD CONSTRAINT FRAUD_STATUSES_PK PRIMARY KEY ( FRAUDSTATUSCODE ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;

INSERT INTO FRAUD_STATUSES (FRAUDSTATUSCODE, FRAUDSTATUSDESCRIPTION, VERSION, CREATEDATE, CREATEUSER, UPDATEDATE, UPDATEUSER) 
VALUES ('INITIAL_REQUEST', 'Initial request received.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUDSTATUSCODE, FRAUDSTATUSDESCRIPTION, VERSION, CREATEDATE, CREATEUSER, UPDATEDATE, UPDATEUSER) 
VALUES ('DECISION_MADE', 'Final fraud decision is made.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUDSTATUSCODE, FRAUDSTATUSDESCRIPTION, VERSION, CREATEDATE, CREATEUSER, UPDATEDATE, UPDATEUSER) 
VALUES ('PENDING_REVIEW', 'Fraud decision is pending manual review.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUDSTATUSCODE, FRAUDSTATUSDESCRIPTION, VERSION, CREATEDATE, CREATEUSER, UPDATEDATE, UPDATEUSER) 
VALUES ('CANCELLED', 'Fraud assessment is canceled.', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');


CREATE TABLE FRAUD_RQST_TYPES (
    REQUESTTYPECODE          VARCHAR2(80 CHAR) NOT NULL,
    REQUESTTYPEDESCRIPTION   VARCHAR2(2000),
    VERSION    		  		 INTEGER NOT NULL,
	CREATEDATE               DATE NOT NULL,
    CREATEUSER               VARCHAR2(80) NOT NULL,
    UPDATEDATE               DATE NOT NULL,
    UPDATEUSER               VARCHAR2(80 CHAR) NOT NULL
);

INSERT INTO FRAUD_RQST_TYPES (REQUESTTYPECODE, REQUESTTYPEDESCRIPTION, VERSION, CREATEDATE, CREATEUSER, UPDATEDATE, UPDATEUSER) 
VALUES ('FRAUD_CHECK', 'Fraud check request', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_RQST_TYPES (REQUESTTYPECODE, REQUESTTYPEDESCRIPTION, VERSION, CREATEDATE, CREATEUSER, UPDATEDATE, UPDATEUSER) 
VALUES ('ORDER_CANCEL', 'Order cancellation', 1, SYSDATE, 'ORDER_FRAUD_SCRIPT', SYSDATE, 'ORDER_FRAUD_SCRIPT');


ALTER TABLE FRAUD_RQST_TYPES ADD CONSTRAINT FRAUD_RQST_TYPES_PK PRIMARY KEY ( REQUESTTYPECODE ) USING INDEX TABLESPACE ORDERFRAUD_INDEX;

ALTER TABLE FRAUD_RQST
    ADD CONSTRAINT FRDRQST_FRDSTATUSES_FK FOREIGN KEY ( FRAUDSTATUSCODE )
        REFERENCES FRAUD_STATUSES ( FRAUDSTATUSCODE );

ALTER TABLE FRAUD_RQST
    ADD CONSTRAINT FRDRQST_RQST_TYPS_FK FOREIGN KEY ( REQUESTTYPECODE )
        REFERENCES FRAUD_RQST_TYPES ( REQUESTTYPECODE );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY 
    ADD CONSTRAINT FRDRQSTHSTRY_FRDRQST_FK FOREIGN KEY ( FRAUDREQUESTID ) 
        REFERENCES FRAUD_RQST ( FRAUDREQUESTID );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY
    ADD CONSTRAINT FRDRQSTHSTRY_FRDSTATUSES_FK FOREIGN KEY ( FRAUDSTATUSCODE )
        REFERENCES FRAUD_STATUSES ( FRAUDSTATUSCODE );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY_DTLS
    ADD CONSTRAINT FRDRQSTHSTRYDTL_FRDRQSTHTRY_FK FOREIGN KEY ( FRAUDREQUESTSTATUSHISTORYID )
        REFERENCES FRAUD_RQST_STATUS_HSTRY ( FRAUDREQUESTSTATUSHISTORYID );

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_READ_ROLE;
GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_WRITE_ROLE;
GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_READ_ROLE;
GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_READ_ROLE;
GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST_STATUS_HSTRY_DTLS" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_READ_ROLE;
-- GRANT INSERT ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_STATUSES" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_READ_ROLE;
-- GRANT INSERT ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT UPDATE ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_WRITE_ROLE;
-- GRANT DELETE ON "ORDER_FRAUD"."FRAUD_RQST_TYPES" TO ORDERFRAUD_DELETE_ROLE;

GRANT SELECT ON "ORDER_FRAUD"."ID_GENERATOR" TO ORDERFRAUD_READ_ROLE;
GRANT UPDATE ON "ORDER_FRAUD"."ID_GENERATOR" TO ORDERFRAUD_WRITE_ROLE;
