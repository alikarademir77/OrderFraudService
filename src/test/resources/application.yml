#### TESTS ####

# NOTE: This overrides the application.yml in the src/main/resources

server:
  port: 8090
  contextPath: /orderfraud

---
### UNIT TEST ###

spring:
  profiles: unittest
# -------------------------------------------------------------------------------------------------------------
# Database Configurations
# Note: If you want to use H2, you can use the h2 profile along with dev
# -------------------------------------------------------------------------------------------------------------
#  datasource:
#    #url: jdbc:h2:mem:order-fraud;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    url: jdbc:h2:tcp://http://192.168.99.100:1521/~/order-fraud
#    platform: h2
#    username: h2
#    password:
#    driverClassName: org.h2.Driver
#    schema: classpath:relationaldb/h2-ddl.sql
#    data: classpath:relationaldb/data.sql
#  jpa:
#    database-platform: org.hibernate.dialect.H2Dialect
#    hibernate:
#      ddl-auto: none
#    properties:
#      hibernate:
#        show_sql: true
#        use_sql_comments: true
#        format_sql: true
#  h2:
#    console:
#      enabled: true
#      path: /console
#      settings:
#        trace: false
#        web-allow-others: true

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://192.168.99.100:3306/?useSSL=false
    platform: mysql
    username: root
    password: p@ssword
    driver-class-name: com.mysql.jdbc.Driver
    schema: classpath:relationaldb/mysql.sql
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: none
    properties:
      hibernate:
        connection:
          provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
        dialect: org.hibernate.dialect.MySQL5Dialect
        show_sql: true
        use_sql_comments: true
        format_sql: true
        hikari:
          minimumIdle: 1
          maximumPoolSize: 2
          idleTimeout: 5000
          dataSource:
            serverName: 192.168.99.100
            portNumber: 3306
            databaseName: ORDER_FRAUD
            user: root
            password: p@ssword
          dataSourceClassName: com.mysql.jdbc.jdbc2.optional.MysqlDataSource


# -------------------------------------------------------------------------------------------------------------
# RabbitMQ Configurations
# -------------------------------------------------------------------------------------------------------------
  rabbitmq:
    host: localhost
    port: 5672
    username: guest # Login user to authenticate to the RabbitMQ broker
    password: guest # Login password to authenticate to the RabbitMQ broker
    virtual-host: orders # Virtual host to use when connecting to the RabbitMQ broker
  cloud:
    stream:
      bindings:
        fraudInbound:
          destination: fraudInbound # Inbound exchange
          group: fraudInboundConsumersGroup
          consumer:
            concurrency: 1 # The concurrency of the inbound consumer
            maxAttempts: 1 # The number of attempts of re-processing an inbound message
        fraudOutbound:
          destination: fraudOutbound # Outbound exchange
          producer:
            requiredGroups: fraudOutboundConsumersGroup
      rabbit:
        bindings:
          fraudInbound:
            consumer:
              autoBindDlq: true
              dlqTtl: 10000
              republishToDlq: true
              dlqDeadLetterExchange: # Using default exchange so dlqDeadLetterExchange is assigned to empty string
      default:
        contentType: application/json
messaging:
  errorRetryCount: 3
  outbound:
    retry-attempts: 3 # Number of attempts to retry if unable to place message on outbound queue | Default: 0
    timeout: 10000 # (ms)
# -------------------------------------------------------------------------------------------------------------
# Client Configurations
# Note: These are clients for services that Order Fraud Service will need to call
# -------------------------------------------------------------------------------------------------------------
client:
  order-details:
    connection:
      url: dummyUrl # Base URL
      getOrderDetailsEndpoint: dummy
      timeout:
        connection: ~ # (ms)
        request: ~ # (ms)
      ssl:
        enabled: false
        verify-hostname: ~ # Default: true
        keystore: ~ # Prefix with file: or classpath:
        keystore-password: ~
        key-alias: ~ # (Optional)
        key-password: ~ # (Optional)
        truststore: ~ # Prefix with file: or classpath:
        truststore-password: ~
  payment-service:
    connection:
      url: dummyUrl # Base URL
      timeout:
        connection: ~ # (ms)
        request: ~ # (ms)
      ssl:
        enabled: false
        verify-hostname: ~ # Default: true
        keystore: ~ # Prefix with file: or classpath:
        keystore-password: ~
        key-alias: ~ # (Optional)
        key-password: ~ # (Optional)
        truststore: ~ # Prefix with file: or classpath:
        truststore-password: ~
  resource-api:
    connection:
      url: dummyUrl # Base URL
      endpoint: /aggregator
      timeout:
        connection: ~ # (ms)
        request: ~ # (ms)
      ssl:
        enabled: false
        keystore: ~ # Prefix with file: or classpath:
        keystore-password: mccp123
        truststore: ~ # Prefix with file: or classpath:
        truststore-password: changeit
  tas:
    connection:
      url: dummyUrl # Base URL
      fraudcheck-soap-action-callback: fraudMockService
      timeout:
        connection: ~ # (ms)
        request: ~ # (ms)
      ssl:
        enabled: false
        verify-hostname: ~ # Default: true
        keystore: ~ # Prefix with file: or classpath:
        keystore-password: ~
        key-alias: ~ # (Optional)
        key-password: ~ # (Optional)
        truststore: ~ # Prefix with file: or classpath:
        truststore-password: ~
# -------------------------------------------------------------------------------------------------------------
# Logging Configurations
# -------------------------------------------------------------------------------------------------------------
logging:
  level:
    ca.bestbuy: DEBUG
    # ROOT: WARN means that any logging context not matching a context described above will be filtered to level WARN
    ROOT: INFO