DROP SCHEMA ORDER_FRAUD IF EXISTS;
CREATE SCHEMA ORDER_FRAUD;

DROP TABLE ORDER_FRAUD.ID_GENERATOR IF EXISTS;
CREATE TABLE ORDER_FRAUD.ID_GENERATOR (
	GENERATED_NAME VARCHAR(80) NOT NULL,
	GENERATED_VALUE NUMBER NOT NULL
);
ALTER TABLE ORDER_FRAUD.ID_GENERATOR ADD CONSTRAINT ID_GENERATOR_PK PRIMARY KEY ( GENERATED_NAME );

DROP TABLE ORDER_FRAUD.FRAUDREQUEST IF EXISTS;
CREATE TABLE ORDER_FRAUD.FRAUDREQUEST (
    FRAUDREQUESTID    NUMBER NOT NULL,
--  fs order number
    ORDERNUMBER       NUMBER NOT NULL,
    EVENTDATE         DATE NOT NULL,
--  every time oms moves the fso to fraud check required,we will create a new version
    REQUESTVERSION    INTEGER NOT NULL,
    REQUESTTYPECODE   VARCHAR2(80 CHAR) NOT NULL,
    FRAUDSTATUSCODE   VARCHAR2(80 CHAR) NOT NULL,
	VERSION    		  INTEGER NOT NULL,
    CREATEDATE        DATE NOT NULL,
    CREATEUSER        VARCHAR2(80 CHAR) NOT NULL,
    UPDATEDATE        DATE NOT NULL,
    UPDATEUSER        VARCHAR2(80 CHAR) NOT NULL
);
ALTER TABLE ORDER_FRAUD.FRAUDREQUEST ADD CONSTRAINT FRAUDREQUEST_PK PRIMARY KEY ( FRAUDREQUESTID );
ALTER TABLE ORDER_FRAUD.FRAUDREQUEST ADD CONSTRAINT FRAUDREQUEST_UN UNIQUE ( ORDERNUMBER, REQUESTVERSION );

DROP TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORY IF EXISTS;
CREATE TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORY (
    FRAUDREQUESTSTATUSHISTORYID   NUMBER NOT NULL,
    FRAUDREQUESTID          NUMBER NOT NULL,
    FRAUDSTATUSCODE         VARCHAR2(80 CHAR) NOT NULL,
	VERSION    		  		INTEGER NOT NULL,
    CREATEDATE             	DATE NOT NULL,
    CREATEUSER              VARCHAR2(80 CHAR) NOT NULL,
    UPDATEDATE              DATE NOT NULL,
    UPDATEUSER              VARCHAR2(80) NOT NULL
);
ALTER TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORY ADD CONSTRAINT FRAUDREQUESTSTATUSHISTORY_PK PRIMARY KEY ( FRAUDREQUESTSTATUSHISTORYID );

DROP TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORYDETAILS IF EXISTS;
CREATE TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORYDETAILS (
    FRAUDREQUESTSTATUSHISTORYID   NUMBER NOT NULL,
    TASREQUEST              CLOB NOT NULL,
    TASRESPONSE             CLOB NOT NULL,
	VERSION    		  		INTEGER NOT NULL,
    CREATEDATE              DATE NOT NULL,
    CREATEUSER              VARCHAR2(80) NOT NULL,
    UPDATEDATE              DATE NOT NULL,
    UPDATEUSER              VARCHAR2(80) NOT NULL
);
ALTER TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORYDETAILS ADD CONSTRAINT FRAUDREQUESTSTATUSHISTORYDETAILS_PK PRIMARY KEY ( FRAUDREQUESTSTATUSHISTORYID );

DROP TABLE ORDER_FRAUD.FRAUDSTATUSES IF EXISTS;
CREATE TABLE ORDER_FRAUD.FRAUDSTATUSES (
    FRAUDSTATUSCODE          VARCHAR2(80) NOT NULL,
    FRAUDSTATUSDESCRIPTION   VARCHAR2(2000 CHAR),
	VERSION    		  		 INTEGER NOT NULL,
    CREATEDATE               DATE NOT NULL,
    CREATEUSER               VARCHAR2(80) NOT NULL,
    UPDATEDATE               DATE NOT NULL,
    UPDATEUSER               VARCHAR2(80) NOT NULL
);
ALTER TABLE ORDER_FRAUD.FRAUDSTATUSES ADD CONSTRAINT FRAUDSTATUSES_PK PRIMARY KEY ( FRAUDSTATUSCODE );

DROP TABLE ORDER_FRAUD.FRAUDREQUESTTYPES IF EXISTS;
CREATE TABLE ORDER_FRAUD.FRAUDREQUESTTYPES (
    REQUESTTYPECODE          VARCHAR2(80 CHAR) NOT NULL,
    REQUESTTYPEDESCRIPTION   VARCHAR2(2000),
	VERSION    		  		 INTEGER NOT NULL,
    CREATEDATE               DATE NOT NULL,
    CREATEUSER               VARCHAR2(80) NOT NULL,
    UPDATEDATE               DATE NOT NULL,
    UPDATEUSER               VARCHAR2(80 CHAR) NOT NULL
); 
ALTER TABLE ORDER_FRAUD.FRAUDREQUESTTYPES ADD CONSTRAINT FRAUDREQUESTTYPES_PK PRIMARY KEY ( REQUESTTYPECODE );

ALTER TABLE ORDER_FRAUD.FRAUDREQUEST
    ADD CONSTRAINT FRDRQST_FRDSTATUSES_FK FOREIGN KEY ( FRAUDSTATUSCODE )
        REFERENCES FRAUDSTATUSES ( FRAUDSTATUSCODE );

ALTER TABLE ORDER_FRAUD.FRAUDREQUEST
    ADD CONSTRAINT FRDRQST_RQST_TYPS_FK FOREIGN KEY ( REQUESTTYPECODE )
        REFERENCES FRAUDREQUESTTYPES ( REQUESTTYPECODE );		

ALTER TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORY 
    ADD CONSTRAINT FRDRQSTHSTRY_FRDRQST_FK FOREIGN KEY ( FRAUDREQUESTID ) 
        REFERENCES FRAUDREQUEST ( FRAUDREQUESTID );

ALTER TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORY
    ADD CONSTRAINT FRDRQSTHSTRY_FRDSTATUSES_FK FOREIGN KEY ( FRAUDSTATUSCODE )
        REFERENCES FRAUDSTATUSES ( FRAUDSTATUSCODE );

ALTER TABLE ORDER_FRAUD.FRAUDREQUESTSTATUSHISTORYDETAILS
    ADD CONSTRAINT FRDRQSTHSTRYDTL_FRDRQSTHTRY_FK FOREIGN KEY ( FRAUDREQUESTSTATUSHISTORYID )
        REFERENCES FRAUDREQUESTSTATUSHISTORY ( FRAUDREQUESTSTATUSHISTORYID );