DROP SCHEMA IF EXISTS ORDER_FRAUD;
CREATE SCHEMA ORDER_FRAUD;

DROP TABLE IF EXISTS ID_GENERATOR;
CREATE TABLE ID_GENERATOR ( GENERATED_NAME VARCHAR(80) NOT NULL, GENERATED_VALUE BIGINT NOT NULL );
ALTER TABLE ID_GENERATOR ADD CONSTRAINT ID_GENERATOR_PK PRIMARY KEY ( GENERATED_NAME );

DROP TABLE IF EXISTS FRAUD_RQST;
CREATE TABLE FRAUD_RQST (
    FRAUD_RQST_ID    BIGINT NOT NULL,
    ORDER_NUMBER       BIGINT NOT NULL,
    EVENT_DATE         DATETIME NOT NULL,
    REQUEST_VERSION    INTEGER NOT NULL,
    REQUEST_TYPE_CODE   VARCHAR(80) NOT NULL,
    FRAUD_STATUS_CODE   VARCHAR(80) NOT NULL,
	VERSION    		  INTEGER NOT NULL,
    CREATE_DATE        DATETIME NOT NULL,
    CREATE_USER        VARCHAR(80) NOT NULL,
    UPDATE_DATE        DATETIME NOT NULL,
    UPDATE_USER        VARCHAR(80) NOT NULL
);

ALTER TABLE FRAUD_RQST ADD CONSTRAINT FRAUD_RQST_PK PRIMARY KEY ( FRAUD_RQST_ID );
ALTER TABLE FRAUD_RQST ADD CONSTRAINT FRAUD_RQST_UN UNIQUE ( ORDER_NUMBER, REQUEST_VERSION );

DROP TABLE IF EXISTS FRAUD_RQST_STATUS_HSTRY;
CREATE TABLE FRAUD_RQST_STATUS_HSTRY (
    FRAUD_RQST_STATUS_HSTRY_ID   BIGINT NOT NULL,
    FRAUD_RQST_ID          BIGINT NOT NULL,
    FRAUD_STATUS_CODE         VARCHAR(80) NOT NULL,
	VERSION    		  		INTEGER NOT NULL,
    CREATE_DATE             	DATETIME NOT NULL,
    CREATE_USER              VARCHAR(80) NOT NULL,
    UPDATE_DATE              DATETIME NOT NULL,
    UPDATE_USER              VARCHAR(80) NOT NULL
);
ALTER TABLE FRAUD_RQST_STATUS_HSTRY ADD CONSTRAINT FRAUD_RQST_STATUS_HSTRY_PK PRIMARY KEY ( FRAUD_RQST_STATUS_HSTRY_ID );

DROP TABLE IF EXISTS FRAUD_RQST_STATUS_HSTRY_DTLS;
CREATE TABLE FRAUD_RQST_STATUS_HSTRY_DTLS (
	FRAUD_RQST_STATUS_HSTRY_DTL_ID   BIGINT NOT NULL,
    FRAUD_RQST_STATUS_HSTRY_ID   BIGINT NOT NULL,
	FRAUD_RESPONSE_STATUS_CODE         VARCHAR(80) NOT NULL,
	TOTAL_FRAUD_SCORE VARCHAR(80),
	RECOMMENDATION_CODE  VARCHAR(400),
	ACCERTIFY_USER VARCHAR(80),
	ACCERTIFY_USER_ACTION_TIME DATETIME,
    TAS_REQUEST              LONGTEXT,
    TAS_RESPONSE             LONGTEXT,
    VERSION    		  		INTEGER NOT NULL,
	CREATE_DATE              DATETIME NOT NULL,
    CREATE_USER              VARCHAR(80) NOT NULL,
    UPDATE_DATE              DATETIME NOT NULL,
    UPDATE_USER              VARCHAR(80) NOT NULL
);

ALTER TABLE FRAUD_RQST_STATUS_HSTRY_DTLS ADD CONSTRAINT FRD_RQST_STATUS_HSTRY_DTLS_PK PRIMARY KEY ( FRAUD_RQST_STATUS_HSTRY_DTL_ID );


DROP TABLE IF EXISTS FRAUD_STATUSES;
CREATE TABLE FRAUD_STATUSES (
    FRAUD_STATUS_CODE          VARCHAR(80) NOT NULL,
    FRAUD_STATUS_DESCRIPTION   VARCHAR(2000),
    VERSION    		  		 INTEGER NOT NULL,
	CREATE_DATE               DATETIME NOT NULL,
    CREATE_USER               VARCHAR(80) NOT NULL,
    UPDATE_DATE               DATETIME NOT NULL,
    UPDATE_USER               VARCHAR(80) NOT NULL
);
ALTER TABLE FRAUD_STATUSES ADD CONSTRAINT FRAUD_STATUSES_PK PRIMARY KEY ( FRAUD_STATUS_CODE );


DROP TABLE IF EXISTS FRAUD_RQST_TYPES;
CREATE TABLE FRAUD_RQST_TYPES (
    REQUEST_TYPE_CODE          VARCHAR(80) NOT NULL,
    REQUEST_TYPE_DESCRIPTION   VARCHAR(2000),
    VERSION    		  		 INTEGER NOT NULL,
	CREATE_DATE               DATETIME NOT NULL,
    CREATE_USER               VARCHAR(80) NOT NULL,
    UPDATE_DATE               DATETIME NOT NULL,
    UPDATE_USER               VARCHAR(80) NOT NULL
);
ALTER TABLE FRAUD_RQST_TYPES ADD CONSTRAINT FRAUD_RQST_TYPES_PK PRIMARY KEY ( REQUEST_TYPE_CODE );

ALTER TABLE FRAUD_RQST
    ADD CONSTRAINT FRDRQST_FRDSTATUSES_FK FOREIGN KEY ( FRAUD_STATUS_CODE )
        REFERENCES FRAUD_STATUSES ( FRAUD_STATUS_CODE );
		
ALTER TABLE FRAUD_RQST
    ADD CONSTRAINT FRDRQST_RQST_TYPS_FK FOREIGN KEY ( REQUEST_TYPE_CODE )
        REFERENCES FRAUD_RQST_TYPES ( REQUEST_TYPE_CODE );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY 
    ADD CONSTRAINT FRDRQSTHSTRY_FRDRQST_FK FOREIGN KEY ( FRAUD_RQST_ID ) 
        REFERENCES FRAUD_RQST ( FRAUD_RQST_ID );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY
    ADD CONSTRAINT FRDRQSTHSTRY_FRDSTATUSES_FK FOREIGN KEY ( FRAUD_STATUS_CODE )
        REFERENCES FRAUD_STATUSES ( FRAUD_STATUS_CODE );

ALTER TABLE FRAUD_RQST_STATUS_HSTRY_DTLS
    ADD CONSTRAINT FRDRQSTHSTRYDTL_FRDRQSTHTRY_FK FOREIGN KEY ( FRAUD_RQST_STATUS_HSTRY_ID )
        REFERENCES FRAUD_RQST_STATUS_HSTRY ( FRAUD_RQST_STATUS_HSTRY_ID );

INSERT INTO ID_GENERATOR (GENERATED_NAME, GENERATED_VALUE) VALUES ('FRAUD_RQST_ID', 0);
INSERT INTO ID_GENERATOR (GENERATED_NAME, GENERATED_VALUE) VALUES ('FRAUD_RQST_STATUS_HSTRY_ID', 0);
INSERT INTO ID_GENERATOR (GENERATED_NAME, GENERATED_VALUE) VALUES ('FRAUD_RQST_STATUS_HSTRY_DTL_ID', 0);

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('INITIAL_REQUEST', 'Initial request received.', 1, SYSDATE(), 'ORDER_FRAUD_SCRIPT', SYSDATE(), 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('FINAL_DECISION', 'Final fraud decision is made.', 1, SYSDATE(), 'ORDER_FRAUD_SCRIPT', SYSDATE(), 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('PENDING_REVIEW', 'Fraud decision is pending manual review.', 1, SYSDATE(), 'ORDER_FRAUD_SCRIPT', SYSDATE(), 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_STATUSES (FRAUD_STATUS_CODE, FRAUD_STATUS_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('CANCELLED', 'Fraud assessment is canceled.', 1, SYSDATE(), 'ORDER_FRAUD_SCRIPT', SYSDATE(), 'ORDER_FRAUD_SCRIPT');


INSERT INTO FRAUD_RQST_TYPES (REQUEST_TYPE_CODE, REQUEST_TYPE_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('FRAUD_CHECK', 'Fraud check request', 1, SYSDATE(), 'ORDER_FRAUD_SCRIPT', SYSDATE(), 'ORDER_FRAUD_SCRIPT');

INSERT INTO FRAUD_RQST_TYPES (REQUEST_TYPE_CODE, REQUEST_TYPE_DESCRIPTION, VERSION, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER) 
VALUES ('ORDER_CANCEL', 'Order cancellation', 1, SYSDATE(), 'ORDER_FRAUD_SCRIPT', SYSDATE(), 'ORDER_FRAUD_SCRIPT');







		